/* Markdown Content Styles */
/* This file provides comprehensive styling for rendered markdown content */

/* Base prose styles for markdown content */
.prose {
  color: var(--foreground);
  max-width: none;
  line-height: 1.75;
}

.prose :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--foreground);
  font-weight: 700;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--foreground);
  font-weight: 600;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--foreground);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--foreground);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(h5):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--foreground);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(h6):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--foreground);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  list-style-type: disc;
  padding-left: 1.625em;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  list-style-type: decimal;
  padding-left: 1.625em;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--foreground);
  border-left-width: 0.25rem;
  border-left-color: var(--primary);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"], [class~="not-prose"] *))::before {
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"], [class~="not-prose"] *))::after {
  content: close-quote;
}

.prose :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  border-color: var(--border);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--primary);
  text-decoration: underline;
  font-weight: 500;
}

.prose :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)):hover {
  text-decoration: none;
}

.prose :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-weight: 600;
  color: var(--foreground);
}

.prose :where(em):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-style: italic;
}

.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--foreground);
  font-weight: 600;
  font-size: 0.875em;
  background-color: var(--muted);
  padding: 0.125rem 0.375rem;
  border-radius: 0.375rem;
  font-family: var(--font-mono);
}

.prose :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  background-color: var(--muted);
  overflow-x: auto;
  font-weight: 400;
  color: var(--foreground);
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.5rem;
  padding: 0.8571429em 1.1428571em;
  border: 1px solid var(--border);
}

.prose :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--border);
}

.prose :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--foreground);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
  background-color: var(--muted);
}

.prose :where(tbody tr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--border);
}

.prose :where(tbody td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  vertical-align: baseline;
  padding: 0.5714286em;
}

.prose :where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--border);
}

.prose :where(tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  vertical-align: top;
}

.prose :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure > *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--muted-foreground);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
  text-align: center;
}

.prose :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  max-width: 100%;
  height: auto;
  border-radius: 0.5rem;
  margin: 0 auto;
}

/* Dark mode support */
.dark .prose {
  color: var(--foreground);
}

.dark .prose :where(h1, h2, h3, h4, h5, h6):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--foreground);
}

.dark .prose :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--foreground);
}

.dark .prose :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--foreground);
}

.dark .prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--foreground);
}

.dark .prose :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--primary);
}

/* Task list support */
.prose :where(ul.task-list):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  list-style: none;
  padding-left: 0;
}

.prose :where(ul.task-list li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  display: flex;
  align-items: center;
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(ul.task-list li > input[type="checkbox"]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-right: 0.75em;
  width: 1.25em;
  height: 1.25em;
  cursor: pointer;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .prose {
    font-size: 0.875rem;
  }
  
  .prose :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 1.875em;
  }
  
  .prose :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 1.25em;
  }
  
  .prose :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 1.125em;
  }
  
  .prose :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.75rem;
  }
}